name: Free disk space

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Init docker
        run: brew install docker docker-compose docker-machine xhyve docker-machine-driver-xhyve
        
      - name: Give perms
        run: |
          sudo chown root:wheel $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
          sudo chmod u+s $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve  
          
      - name: Booting machine
        run: |
          mkdir -p ~/.docker/machine/cache
          curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.5/boot2docker.iso
          while ! docker-machine create --driver xhyve default; do
            docker-machine rm -f default
            sleep 1;
          done

      - name: Testing machine
        run: docker-machine ls

      - name: Env
        run: docker-machine env default

      - name: Docker-Machine
        run: eval $(docker-machine env default)

      - name: Testing machine
        run: docker-machine ssh default id
        
      - name: Export connection to Docker
        run: |
          eval "$(docker-machine env default)"
          DOCKER_TLS_VERIFY="$(   docker-machine env default | grep DOCKER_TLS_VERIFY   | sed -e 's/.*="//g' -e 's/"$//g' )"
          DOCKER_HOST="$(         docker-machine env default | grep DOCKER_HOST         | sed -e 's/.*="//g' -e 's/"$//g' )"
          DOCKER_CERT_PATH="$(    docker-machine env default | grep DOCKER_CERT_PATH    | sed -e 's/.*="//g' -e 's/"$//g' )"
          DOCKER_MACHINE_NAME="$( docker-machine env default | grep DOCKER_MACHINE_NAME | sed -e 's/.*="//g' -e 's/"$//g' )"
          DOCKER_IP="$( docker-machine ip default )";
          echo ::set-env name=DOCKER_TLS_VERIFY::${DOCKER_TLS_VERIFY}
          echo ::set-env name=DOCKER_HOST::${DOCKER_HOST}
          echo ::set-env name=DOCKER_CERT_PATH::${DOCKER_CERT_PATH}
          echo ::set-env name=DOCKER_MACHINE_NAME::${DOCKER_MACHINE_NAME}
          echo ::set-env name=localhostaddress::${DOCKER_IP}

      - name: Running
        run: |
          docker run --name ubuntu -t -d ubuntu:eoan
      
      - name: Running
        run: |
          docker exec ubuntu uptime  
              
      - name: Running
        run: |
          docker exec ubuntu uptime  
              
      - name: Listing
        run: docker --version
        
      - name: Test
        run: echo "ok" > file.txt
                
      - name: Downloading clang
        run: curl -s https://raw.githubusercontent.com/chromium/chromium/master/tools/clang/scripts/update.py | python - --output-dir=.

      - name: Listing
        run: ls -la
