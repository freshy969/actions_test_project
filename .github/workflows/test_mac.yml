name: Free disk space

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Test
        run: |
          ifconfig -a
          echo "/Users/runner -maproot=nobody 0.0.0.0" | sudo tee /etc/exports
          sudo nfsd checkexports
          sudo nfsd enable
          sudo nfsd start
          nfsd status
        
      - name: Install osxfuse
        run: brew cask install osxfuse

      - name: Init docker
        run: brew install docker docker-compose docker-machine xhyve docker-machine-driver-xhyve sshfs
        
      - name: Give perms
        run: |
          sudo chown root:wheel $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
          sudo chmod u+s $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve  
          df -h
          sudo nfsd enable
          cat /etc/exports
          ifconfig -a
      
      #
      - name: Booting machine
        run: |
          mkdir -p ~/.docker/machine/cache
          curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v18.06.1-ce/boot2docker.iso
          df -h
          for i in $(seq 1 10); do docker-machine create --driver xhyve default && s=0 && break || sudo kill -9 `ps aux | grep xhyve | grep -v grep | awk '{print $2}'` && sudo rm -rf /Users/runner/.docker/machine/machines/default && s=$? && sleep 15; done; (exit $s)    # Retry 10 times before abort
          
      - name: Export connection to Docker
        run: |
          DOCKER_TLS_VERIFY="$(docker-machine env default | grep DOCKER_TLS_VERIFY | sed -e 's/.*="//g' -e 's/"$//g')"
          DOCKER_HOST="$(docker-machine env default | grep DOCKER_HOST | sed -e 's/.*="//g' -e 's/"$//g')"
          DOCKER_CERT_PATH="$(docker-machine env default | grep DOCKER_CERT_PATH | sed -e 's/.*="//g' -e 's/"$//g')"
          DOCKER_MACHINE_NAME="$(docker-machine env default | grep DOCKER_MACHINE_NAME | sed -e 's/.*="//g' -e 's/"$//g')"
          DOCKER_IP="$(docker-machine ip default)";
          echo ::set-env name=DOCKER_TLS_VERIFY::${DOCKER_TLS_VERIFY}
          echo ::set-env name=DOCKER_HOST::${DOCKER_HOST}
          echo ::set-env name=DOCKER_CERT_PATH::${DOCKER_CERT_PATH}
          echo ::set-env name=DOCKER_MACHINE_NAME::${DOCKER_MACHINE_NAME}
          echo ::set-env name=DOCKER_IP::${DOCKER_IP}
          df -h

      - name: Creating volume
        run: docker volume create storage

      - name: Starting Ubuntu machine
        run: docker run --name ubuntu -t -d -v storage:/storage -v /etc:/root/test ubuntu:eoan

      - name: Running
        run: |
          docker exec ubuntu ifconfig -a
          df -h
          docker exec ubuntu ls -la /root/test
          docker volume ls
          docker exec ubuntu df -h
          docker exec ubuntu ls -la

      - name: Listing running machines
        run: docker-machine ls
          
      - name: Mounting disk
        run: docker-machine mount default:/etc test
          
      - name: Running
        run: |
          docker exec ubuntu id
          
      - name: Running
        run: |
          ls -la test 
           
          
      - name: Running
        run: |
          docker exec ubuntu pwd  
              
      - name: Running
        run: |
          docker exec ubuntu df -h  
          
      - name: Running
        run: |
          docker exec ubuntu ls -la 
          
      - name: Listing
        run: docker --version
        #
      - name: Test
        run: echo "ok" > file.txt
                
      - name: Downloading clang
        run: curl -s https://raw.githubusercontent.com/chromium/chromium/master/tools/clang/scripts/update.py | python - --output-dir=.

      - name: Listing
        run: ls -la
